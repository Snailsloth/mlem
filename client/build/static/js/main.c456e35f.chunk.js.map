{"version":3,"sources":["App/components/Cards/GitCard/Octicons-mark-github2.svg","App/components/Cards/TwitterCard/twitter2.svg","App/components/Terminal/ConsoleText.js","App/components/Terminal/Terminal.js","App/Views/Home/Home.js","App/components/Cards/GitCard/GitCard.js","App/components/Cards/TwitterCard/TwitterCard.js","App/Views/Contacts/Contacts.js","App/Views/NotFound/NotFound.js","App/components/Navpanel/Navpanel.js","App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ConsoleText","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","commandInput","maxspeed","output","_this2","txtElement","document","querySelector","words","i","writeText","length","speed","Math","floor","random","innerHTML","charAt","setTimeout","setState","initTyping","react_default","a","createElement","Fragment","className","data-words","commandtext","Component","Terminal","_isMounted","toggleInvert","invertBody","bind","assertThisInitialized","window","innerWidth","innerHeight","event","clientX","clientY","elemClass","root","documentElement","windowSize","getWindowSize","addEventListener","mouseCoords","getMouseCoords","tmpX","tmpY","virtualXcenter","virtualYcenter","xX","yY","style","setProperty","ceil","skewThis","onClick","headerTitle","Terminal_ConsoleText","ismounted","Home","pageName","pageSwitchHandler","components_Terminal_Terminal","GitCard","name","avatar","url","fetch","concat","user","then","results","json","data","login","avatar_url","html_url","gitDefault","src","gitLogo","alt","gitSuccess","target","rel","href","TwitterCard","tweetDate","tweetText","tweetUrl","username","userimage","userLink","lastTweetDate","slice","lastTweetText","lastTweetUrl","twitterDefault","twitterLogo","twitterSuccess","Contacts","Cards_GitCard_GitCard","Cards_TwitterCard_TwitterCard","NotFound","useEffect","console","log","autoPlay","loop","muted","type","Navpanel","activePage","role","aria-label","react_router_dom","exact","to","App","onPageSwitch","components_Navpanel_Navpanel","react_router","path","render","routeProps","Views_Home_Home","assign","Views_Contacts_Contacts","Views_NotFound_NotFound","Date","getFullYear","Boolean","location","hostname","match","ReactDOM","src_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c456e35f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Octicons-mark-github2.c71a1a83.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter2.9ab778c2.svg\";","import React, { Component } from \"react\";\n\nclass ConsoleText extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      commandInput: this.props.commandInput,\n      maxspeed: this.props.maxspeed,\n      output: false\n    };\n  }\n\n  initTyping() {\n    const txtElement = document.querySelector(`.typeWriter`);\n    const words = this.state.commandInput;\n    let i = 0;\n    let writeText = () => {\n      if (i < words.length) {\n        let speed = Math.floor(Math.random() * Math.floor(300));\n        txtElement.innerHTML += words.charAt(i);\n        i++;\n        setTimeout(writeText, speed);\n      } else {\n        this.setState({\n          output: true\n        });\n      }\n    };\n    writeText();\n  }\n\n  componentDidMount() {\n    this.initTyping();\n  }\n\n  render() {\n    let output = (\n      <React.Fragment>\n        <table>\n          <tbody>\n            <tr>\n              <th className='blue'>Name:</th>\n              <td>Oleg</td>\n            </tr>\n            <tr>\n              <th className='blue'>Location:</th>\n              <td>Russia, Saint-Petersburg</td>\n            </tr>\n            <tr>\n              <th>\n                <span className='icon heart' />\n              </th>\n              <td>\n                <span className='w100 icon node icon-text'>\n                  Node JS , Express\n                </span>\n                <span className='w100 icon js icon-text'>JS</span>\n                <span className='w100 icon pug icon-text'>Pug</span>\n                <span className='w100 icon stylus icon-text'>Stylus, Sass</span>\n                <span className='w100 icon react icon-text'>React</span>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <p>\n          <span className='cursor' />\n        </p>\n      </React.Fragment>\n    );\n\n    return (\n      <React.Fragment>\n        <p>\n          <span className='typeWriter' data-words={this.state.commandtext} />\n        </p>\n        {this.state.output === true ? output : null}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ConsoleText;\n","import React, { Component } from \"react\";\nimport ConsoleText from \"./ConsoleText\";\nimport \"./Terminal.scss\";\n\nclass Terminal extends Component {\n  _isMounted = false;\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggleInvert: false\n    };\n    this.invertBody = this.invertBody.bind(this);\n  }\n\n  invertBody() {\n    // if (this.state.toggleInvert === false) {\n    //   document.body.classList.add(\"filter_Inverted\");\n    //   this.setState(state => ({\n    //     toggleInvert: true\n    //   }));\n    // } else {\n    //   document.body.classList.remove(\"filter_Inverted\");\n    //   this.setState(state => ({\n    //     toggleInvert: false\n    //   }));\n    // }\n  }\n\n  //размер окна\n  getWindowSize() {\n    let windowWidth = window.innerWidth;\n    let windowHeight = window.innerHeight;\n    let windowSizeArr = [windowWidth, windowHeight];\n    return windowSizeArr;\n  }\n\n  //координаты указателя\n  getMouseCoords(event) {\n    let coordX = event.clientX;\n    let coordY = event.clientY;\n    let coordArr = [coordX, coordY];\n    return coordArr;\n  }\n\n  skewThis(elemClass) {\n    let root = document.documentElement;\n    const windowSize = this.getWindowSize();\n    window.addEventListener(\"mousemove\", event => {\n      //следим за координатами мыши при её движении\n      let mouseCoords = this.getMouseCoords(event);\n\n      //количество пикселей, при котором должен быть наклон в 1 градус\n      let tmpX = windowSize[0] / 40;\n      let tmpY = windowSize[1] / 40;\n\n      let virtualXcenter = windowSize[0] / 2;\n      let virtualYcenter = windowSize[1] / 2;\n\n      let xX = (mouseCoords[0] - virtualXcenter) / tmpX;\n      let yY = (mouseCoords[1] - virtualYcenter) / tmpY;\n      //меняем :root правила transform у окна терминала(прописаны в scss компонента)\n      root.style.setProperty(\"--terminal-x\", Math.ceil(xX) + \"deg\");\n      root.style.setProperty(\"--terminal-y\", Math.ceil(yY) + \"deg\");\n    });\n  }\n\n  componentDidMount() {\n    this.skewThis(\".terminal\");\n  }\n\n  render() {\n    return (\n      <div className='shadow-wrapper'>\n        <div className='terminal'>\n          <div className='header'>\n            <div className='header-buttons'>\n              <button\n                onClick={this.invertBody}\n                className='header-button--left'\n              />\n              <button className='header-button--center' />\n              <button className='header-button--right' />\n            </div>\n            <span className='header-text'>{this.props.headerTitle}</span>\n          </div>\n          <div className='terminal-content'>\n            <ConsoleText\n              ismounted={this._isMounted}\n              commandInput='whoiami'\n              maxspeed='3500'\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Terminal;\n","import React, { Component } from \"react\";\n\nimport Terminal from \"../../components/Terminal/Terminal\";\n\nclass Home extends Component {\n  state = {\n    pageName: \"Homepage\"\n  };\n\n  componentDidMount() {\n    this.props.pageSwitchHandler(this.state.pageName);\n  }\n\n  render() {\n    return (\n      <div className='container content'>\n        <Terminal headerTitle='Hello world' />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport \"../Card.scss\";\nimport gitLogo from \"./Octicons-mark-github2.svg\";\n\nclass GitCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: ``,\n      avatar: ``,\n      url: ``\n    };\n  }\n  //https://stackoverflow.com/questions/21869795/github-api-retrieve-user-commits\n  componentDidMount() {\n    fetch(`http://localhost:5000/git/${this.props.user}`)\n      .then(results => {\n        return results.json();\n        // console.log(results.json())\n      })\n      .then(data => {\n        this.setState({\n          name: data.login,\n          avatar: data.avatar_url,\n          url: data.html_url\n        });\n      });\n  }\n\n  render() {\n    const gitDefault = (\n      <div className='liveCard'>\n        <img className='svgMask--git' src={gitLogo} alt='Git icon' />\n        <div className='liveCardInfo'>\n          <p>Github username</p>\n        </div>\n      </div>\n    );\n\n    const gitSuccess = (\n      <div className='liveCard'>\n        <img className='svgMask--git' src={gitLogo} alt={this.state.name} />\n\n        <div className='liveCard-Info'>\n          <p>\n            Github:{\" \"}\n            <a target='_blank' rel='noopener noreferrer' href={this.state.url}>\n              {this.state.name}\n            </a>{\" \"}\n          </p>\n\n          <p>\n            Last commit in this project: <br />\n            <span>#soon </span>\n          </p>\n        </div>\n      </div>\n    );\n\n    return this.state.name.length > 0 ? gitSuccess : gitDefault;\n  }\n}\n\nexport default GitCard;\n","import React, { Component } from \"react\";\nimport \"../Card.scss\";\nimport twitterLogo from \"./twitter2.svg\";\n\nclass TwitterCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: ``,\n      avatar: ``,\n      url: ``,\n      tweetDate: \"\",\n      tweetText: \"\",\n      tweetUrl: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(`http://localhost:5000/twitter/${this.props.user}`)\n      .then(results => {\n        return results.json();\n      })\n      .then(data => {\n        this.setState({\n          name: data.username,\n          avatar: data.userimage,\n          url: data.userLink,\n          tweetDate: data.lastTweetDate.slice(0, 10),\n          tweetText: data.lastTweetText,\n          tweetUrl: data.lastTweetUrl\n        });\n      });\n  }\n\n  render() {\n    const twitterDefault = (\n      <div className='liveCard'>\n        <img\n          className='svgMask--twitter'\n          src={twitterLogo}\n          alt='Twitter icon'\n        />\n        <div className='liveCardInfo'>\n          <p>Twitter username</p>\n        </div>\n      </div>\n    );\n\n    const twitterSuccess = (\n      <div className='liveCard'>\n        <img\n          className='svgMask--twitter'\n          src={twitterLogo}\n          alt={this.state.name}\n        />\n\n        <div className='liveCard-Info'>\n          <p>\n            Twitter:{\" \"}\n            <a target='_blank' rel='noopener noreferrer' href={this.state.url}>\n              {this.state.name}\n            </a>\n          </p>\n          <p>\n            Last tweet @ {this.state.tweetDate}: <br />\n            &laquo;\n            <a\n              href={this.state.tweetUrl}\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              {this.state.tweetText}\n            </a>\n            &raquo;\n          </p>\n        </div>\n      </div>\n    );\n\n    return this.state.name.length > 0 ? twitterSuccess : twitterDefault;\n  }\n}\n\nexport default TwitterCard;\n","import React, { Component } from \"react\";\nimport GitCard from \"../../components/Cards/GitCard/GitCard\";\nimport TwitterCard from \"../../components/Cards/TwitterCard/TwitterCard\";\n\nclass Contacts extends Component {\n  state = {\n    pageName: \"Contacts\"\n  };\n\n  componentDidMount() {\n    this.props.pageSwitchHandler(this.state.pageName);\n  }\n\n  render() {\n    return (\n      <div className='container content of--hidden'>\n        <div className='shadow-wrapper'>\n          <GitCard user='Snailsloth' />\n          <TwitterCard user='SnailslothPug' />\n          <div className='liveCard'>\n            <img src='assets/icons/paperairplane-grad.svg' alt='' />\n            <div className='liveCard-Info'>\n              <p>\n                T.me:{\" \"}\n                <a\n                  target='_blank'\n                  rel='noopener noreferrer'\n                  href='https://t.me/Snailsloth'\n                >\n                  @Snailsloth\n                </a>{\" \"}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Contacts;\n","import React, { useEffect } from \"react\";\n\nconst NotFound = props => {\n  useEffect(() => {\n    console.log(\"mount it!\");\n    props.pageSwitchHandler(\"404\");\n  }, []); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\n\n  return (\n    <div className='container content'>\n      <h1 className='text--center heading'>Not Found</h1>\n      <video\n        className='isBlock margin--auto'\n        autoPlay={true}\n        loop={true}\n        muted={true}\n      >\n        <source src='/assets/404.webm' type='video/webm' />\n        <source src='/assets/404.mp4' type='video/mp4' />\n      </video>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Navpanel.scss\";\n\nconst Navpanel = props => {\n  return (\n    <>\n      <div className='header-Logo text--left'>\n        <img src='/assets/logo_v2_white.png' alt='Site logo' />\n      </div>\n\n      <h1 className='heading neonFontHeader--glowing text--center'>\n        {props.activePage}\n      </h1>\n      <nav\n        role='navigation'\n        aria-label='Main navigation'\n        className='text--right'\n      >\n        <p className='neonFont'>\n          Go <span>t</span>o:\n        </p>\n        <NavLink exact to='/'>\n          Home\n        </NavLink>\n        <NavLink exact to='/contacts'>\n          Contacts\n        </NavLink>\n      </nav>\n    </>\n  );\n};\n\nexport default Navpanel;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"./styles/global.scss\";\n\nimport Home from \"./Views/Home/Home\";\nimport Contacts from \"./Views/Contacts/Contacts\";\n// import ErrorPage from \"./Views/Error/Error\";\nimport NotFound from \"./Views/NotFound/NotFound\";\n\nimport Navpanel from \"./components/Navpanel/Navpanel\";\n\n/*Matthew's wavy url\nhttp://matthewrayfield.com/articles/animating-urls-with-javascript-and-emojis/#%E2%96%81%E2%96%82%E2%96%84%E2%96%86%E2%96%88%E2%96%88%E2%96%88%E2%96%87%E2%96%85%E2%96%83\n*/\n// function loop() {\n//   var i,\n//     n,\n//     s = \"\";\n\n//   for (i = 0; i < 10; i++) {\n//     n = Math.floor(Math.sin(Date.now() / 200 + i / 2) * 4) + 4;\n\n//     s += String.fromCharCode(0x2581 + n);\n//   }\n\n//   document.title = `Mlem! ${s}`;\n\n//   setTimeout(loop, 10);\n// }\n\n// loop();\n\nclass App extends Component {\n  state = {\n    pageName: \"\"\n  };\n\n  /* Весь этот гемморой с функцией в пропсы и хуком в функциональном компоненте\n  начался только из за того что мне приперло сделать имя страницы \n  не в самом загружаемом компоненте страницы, а в хедере. \n  Скорее всего есть пути и легче но пока что вот как то так вот так. Я верю, что когда-нибудь ты поумнеешь, Олежа */\n  onPageSwitch = pageName => {\n    this.setState({\n      pageName: pageName\n    });\n  };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <>\n          <header className='container'>\n            <Navpanel activePage={this.state.pageName} />\n          </header>\n\n          <Switch>\n            <Route\n              exact\n              path='/'\n              render={routeProps => (\n                <Home {...routeProps} pageSwitchHandler={this.onPageSwitch} />\n              )}\n            />\n\n            <Route\n              exact\n              path='/contacts'\n              render={routeProps => (\n                <Contacts\n                  {...routeProps}\n                  pageSwitchHandler={this.onPageSwitch}\n                />\n              )}\n            />\n\n            <Route\n              render={routeProps => (\n                <NotFound\n                  {...routeProps}\n                  pageName={\"404\"}\n                  pageSwitchHandler={this.onPageSwitch}\n                />\n              )}\n            />\n          </Switch>\n\n          <footer className='footer'>\n            <div className='container'>\n              <b className='text--center'>_od {new Date().getFullYear()}</b>\n            </div>\n          </footer>\n        </>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App/styles/global.scss\";\nimport App from \"./App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}