{"version":3,"sources":["App/components/Cards/GitCard/Octicons-mark-github2.svg","App/components/Cards/TwitterCard/twitter2.svg","App/components/Terminal/ConsoleText.js","App/components/Terminal/Terminal.js","App/Views/Home/Home.js","App/components/Cards/GitCard/GitCard.js","App/components/Cards/TwitterCard/TwitterCard.js","App/Views/Contacts/Contacts.js","App/Views/NotFound/NotFound.js","App/components/Navpanel/Navpanel.js","App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ConsoleText","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isMounted","commandInput","maxspeed","output","_this2","txtElement","document","querySelector","words","i","writeText","length","speed","Math","floor","random","innerHTML","charAt","setTimeout","setState","initTyping","react_default","a","createElement","Fragment","className","target","rel","href","data-words","commandtext","Component","Terminal","toggleInvert","invertBody","bind","assertThisInitialized","window","innerWidth","innerHeight","event","clientX","clientY","elemClass","root","documentElement","windowSize","getWindowSize","addEventListener","mouseCoords","getMouseCoords","tmpX","tmpY","virtualXcenter","virtualYcenter","xX","yY","style","setProperty","ceil","skewThis","onClick","headerTitle","Terminal_ConsoleText","Home","pageName","pageSwitchHandler","components_Terminal_Terminal","GitCard","name","avatar","url","fetch","concat","user","then","results","json","data","login","avatar_url","html_url","gitDefault","src","gitLogo","alt","gitSuccess","TwitterCard","tweetDate","tweetText","tweetUrl","username","userimage","userLink","lastTweetDate","slice","lastTweetText","lastTweetUrl","twitterDefault","twitterLogo","twitterSuccess","Contacts","Cards_GitCard_GitCard","Cards_TwitterCard_TwitterCard","NotFound","useEffect","console","log","autoPlay","loop","muted","type","Navpanel","activePage","role","aria-label","react_router_dom","exact","to","App","onPageSwitch","components_Navpanel_Navpanel","react_router","path","render","routeProps","Views_Home_Home","assign","Views_Contacts_Contacts","Views_NotFound_NotFound","Date","getFullYear","Boolean","location","hostname","match","ReactDOM","src_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a0a8140d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Octicons-mark-github2.c71a1a83.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter2.9ab778c2.svg\";","import React, { Component } from \"react\";\n\nclass ConsoleText extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMounted: false,\n      commandInput: this.props.commandInput,\n      maxspeed: this.props.maxspeed,\n      output: false\n    };\n  }\n\n  initTyping() {\n    const txtElement = document.querySelector(`.typeWriter`);\n    const words = this.state.commandInput;\n    let i = 0;\n    let writeText = () => {\n      if (i < words.length) {\n        let speed = Math.floor(Math.random() * Math.floor(300));\n        txtElement.innerHTML += words.charAt(i);\n        i++;\n        setTimeout(writeText, speed);\n      } else if (i === words.length && this.state.isMounted === false) {\n        return null;\n      } else {\n        this.state.isMounted\n          ? this.setState({\n              output: true\n            })\n          : this.setState({\n              output: false\n            });\n      }\n    };\n    writeText();\n  }\n\n  componentDidMount() {\n    this.setState({\n      isMounted: true\n    });\n    this.initTyping();\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      isMounted: false,\n      output: false\n    });\n  }\n\n  render() {\n    let output = (\n      <React.Fragment>\n        <table>\n          <tbody>\n            <tr>\n              <th className='blue'>Name:</th>\n              <td>Oleg</td>\n            </tr>\n            <tr>\n              <th className='blue'>Location:</th>\n              <td>Russia, Saint-Petersburg</td>\n            </tr>\n            <tr>\n              <th>\n                <span className='icon heart' />\n              </th>\n              <td>\n                <span className='w100 icon node icon-text'>\n                  Node JS , Express\n                </span>\n                <span className='w100 icon js icon-text'>JS</span>\n                <span className='w100 icon pug icon-text'>Pug</span>\n                <span className='w100 icon stylus icon-text'>Stylus, Sass</span>\n                <span className='w100 icon react icon-text'>React</span>\n              </td>\n            </tr>\n            <tr>\n              <th className='blue'>\n                <b>Last</b> projects:\n              </th>\n              <td>\n                <a\n                  target='_blank'\n                  rel='noopener noreferrer'\n                  href='https://gwg.su/'\n                >\n                  https://gwg.su/\n                </a>{\" \"}\n                <br />\n                <a\n                  target='_blank'\n                  rel='noopener noreferrer'\n                  href='https://gw.spb.ru/'\n                >\n                  https://gw.spb.ru/\n                </a>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <p>\n          <span className='cursor' />\n        </p>\n      </React.Fragment>\n    );\n\n    return (\n      <React.Fragment>\n        <p>\n          <span className='typeWriter' data-words={this.state.commandtext} />\n        </p>\n        {this.state.output === true ? output : null}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ConsoleText;\n","import React, { Component } from \"react\";\nimport ConsoleText from \"./ConsoleText\";\nimport \"./Terminal.scss\";\n\nclass Terminal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMounted: false,\n      toggleInvert: false\n    };\n    this.invertBody = this.invertBody.bind(this);\n  }\n\n  invertBody() {\n    // if (this.state.toggleInvert === false) {\n    //   document.body.classList.add(\"filter_Inverted\");\n    //   this.setState(state => ({\n    //     toggleInvert: true\n    //   }));\n    // } else {\n    //   document.body.classList.remove(\"filter_Inverted\");\n    //   this.setState(state => ({\n    //     toggleInvert: false\n    //   }));\n    // }\n  }\n\n  //размер окна\n  getWindowSize() {\n    let windowWidth = window.innerWidth;\n    let windowHeight = window.innerHeight;\n    let windowSizeArr = [windowWidth, windowHeight];\n    return windowSizeArr;\n  }\n\n  //координаты указателя\n  getMouseCoords(event) {\n    let coordX = event.clientX;\n    let coordY = event.clientY;\n    let coordArr = [coordX, coordY];\n    return coordArr;\n  }\n\n  skewThis(elemClass) {\n    let root = document.documentElement;\n    const windowSize = this.getWindowSize();\n    window.addEventListener(\"mousemove\", event => {\n      //следим за координатами мыши при её движении\n      let mouseCoords = this.getMouseCoords(event);\n\n      //количество пикселей, при котором должен быть наклон в 1 градус\n      let tmpX = windowSize[0] / 40;\n      let tmpY = windowSize[1] / 40;\n\n      let virtualXcenter = windowSize[0] / 2;\n      let virtualYcenter = windowSize[1] / 2;\n\n      let xX = (mouseCoords[0] - virtualXcenter) / tmpX;\n      let yY = (mouseCoords[1] - virtualYcenter) / tmpY;\n      //меняем :root правила transform у окна терминала(прописаны в scss компонента)\n      root.style.setProperty(\"--terminal-x\", Math.ceil(xX) + \"deg\");\n      root.style.setProperty(\"--terminal-y\", Math.ceil(yY) + \"deg\");\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      isMounted: true\n    });\n    this.skewThis(\".terminal\");\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      isMounted: false\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div className='terminal'>\n          <div className='header'>\n            <div className='header-buttons'>\n              <button\n                onClick={this.invertBody}\n                className='header-button--left'\n              />\n              <button className='header-button--center' />\n              <button className='header-button--right' />\n            </div>\n            <span className='header-text'>{this.props.headerTitle}</span>\n          </div>\n          <div className='terminal-content'>\n            {this.state.isMounted ? (\n              <ConsoleText commandInput='whoiami' maxspeed='3500' />\n            ) : null}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Terminal;\n\n/*FIXME::\nwhen change page to \"contacts\" before text in terminal loaded\nseems like no help from \"this.state.isMounted\" technique  ¯\\_(ツ)_/¯\n\nindex.js:1446 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.\n    in ConsoleText (at Terminal.js:97)\n    in div (at Terminal.js:95)\n    in div (at Terminal.js:83)\n    in div (at Terminal.js:82)\n    in Terminal (at Home.js:17)\n    in div (at Home.js:16)\n    in Home (at App.js:61)\n\n*/\n","import React, { Component } from \"react\";\n\nimport Terminal from \"../../components/Terminal/Terminal\";\n\nclass Home extends Component {\n  state = {\n    pageName: \"Homepage\"\n  };\n\n  componentDidMount() {\n    this.props.pageSwitchHandler(this.state.pageName);\n  }\n\n  render() {\n    return (\n      <div className='container content'>\n        <Terminal headerTitle='Hello world' />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport \"../Card.scss\";\nimport gitLogo from \"./Octicons-mark-github2.svg\";\n\nclass GitCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: ``,\n      avatar: ``,\n      url: ``\n    };\n  }\n  //https://stackoverflow.com/questions/21869795/github-api-retrieve-user-commits\n  componentDidMount() {\n    fetch(`http://localhost:5000/git/${this.props.user}`)\n      .then(results => {\n        return results.json();\n        // console.log(results.json())\n      })\n      .then(data => {\n        this.setState({\n          name: data.login,\n          avatar: data.avatar_url,\n          url: data.html_url\n        });\n      });\n  }\n\n  render() {\n    const gitDefault = (\n      <div className='liveCard'>\n        <img className='svgMask--git' src={gitLogo} alt='Git icon' />\n        <div className='liveCardInfo'>\n          <p>Github username</p>\n        </div>\n      </div>\n    );\n\n    const gitSuccess = (\n      <div className='liveCard'>\n        <img className='svgMask--git' src={gitLogo} alt={this.state.name} />\n\n        <div className='liveCard-Info'>\n          <p>\n            Github:{\" \"}\n            <a target='_blank' rel='noopener noreferrer' href={this.state.url}>\n              {this.state.name}\n            </a>{\" \"}\n          </p>\n\n          <p>\n            Last commit in this project: <br />\n            <span>#soon </span>\n          </p>\n        </div>\n      </div>\n    );\n\n    return this.state.name.length > 0 ? gitSuccess : gitDefault;\n  }\n}\n\nexport default GitCard;\n","import React, { Component } from \"react\";\nimport \"../Card.scss\";\nimport twitterLogo from \"./twitter2.svg\";\n\nclass TwitterCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: ``,\n      avatar: ``,\n      url: ``,\n      tweetDate: \"\",\n      tweetText: \"\",\n      tweetUrl: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(`http://localhost:5000/twitter/${this.props.user}`)\n      .then(results => {\n        return results.json();\n      })\n      .then(data => {\n        this.setState({\n          name: data.username,\n          avatar: data.userimage,\n          url: data.userLink,\n          tweetDate: data.lastTweetDate.slice(0, 10),\n          tweetText: data.lastTweetText,\n          tweetUrl: data.lastTweetUrl\n        });\n      });\n  }\n\n  render() {\n    const twitterDefault = (\n      <div className='liveCard'>\n        <img\n          className='svgMask--twitter'\n          src={twitterLogo}\n          alt='Twitter icon'\n        />\n        <div className='liveCardInfo'>\n          <p>Twitter username</p>\n        </div>\n      </div>\n    );\n\n    const twitterSuccess = (\n      <div className='liveCard'>\n        <img\n          className='svgMask--twitter'\n          src={twitterLogo}\n          alt={this.state.name}\n        />\n\n        <div className='liveCard-Info'>\n          <p>\n            Twitter:{\" \"}\n            <a target='_blank' rel='noopener noreferrer' href={this.state.url}>\n              {this.state.name}\n            </a>\n          </p>\n          <p>\n            Last tweet @ {this.state.tweetDate}: <br />\n            &laquo;\n            <a\n              href={this.state.tweetUrl}\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              {this.state.tweetText}\n            </a>\n            &raquo;\n          </p>\n        </div>\n      </div>\n    );\n\n    return this.state.name.length > 0 ? twitterSuccess : twitterDefault;\n  }\n}\n\nexport default TwitterCard;\n","import React, { Component } from \"react\";\nimport GitCard from \"../../components/Cards/GitCard/GitCard\";\nimport TwitterCard from \"../../components/Cards/TwitterCard/TwitterCard\";\n\nclass Contacts extends Component {\n  state = {\n    pageName: \"Contacts\"\n  };\n\n  componentDidMount() {\n    this.props.pageSwitchHandler(this.state.pageName);\n  }\n\n  render() {\n    return (\n      <>\n        <GitCard user='Snailsloth' />\n        <TwitterCard user='SnailslothPug' />\n        <div className='liveCard'>\n          <img src='assets/icons/paperairplane-grad.svg' alt='' />\n          <div className='liveCard-Info'>\n            <p>\n              T.me:{\" \"}\n              <a\n                target='_blank'\n                rel='noopener noreferrer'\n                href='https://t.me/Snailsloth'\n              >\n                @Snailsloth\n              </a>{\" \"}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Contacts;\n","import React, { useEffect } from \"react\";\n\nconst NotFound = props => {\n  useEffect(() => {\n    console.log(\"mount it!\");\n    props.pageSwitchHandler(\"404\");\n  }, []); // passing an empty array as second argument triggers the callback in useEffect only after the initial render thus replicating `componentDidMount` lifecycle behaviour\n\n  return (\n    <>\n      <video\n        className='isBlock w100 h100 margin--auto'\n        autoPlay={true}\n        loop={true}\n        muted={true}\n      >\n        <source src='/assets/404.webm' type='video/webm' />\n        <source src='/assets/404.mp4' type='video/mp4' />\n      </video>\n    </>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Navpanel.scss\";\n\nconst Navpanel = props => {\n  return (\n    <>\n      <div className='header-Logo text--left'>\n        <img src='/assets/logo_v2_white.png' alt='Site logo' />\n      </div>\n\n      <h1 className='heading pagename neonFontHeader--glowing text--center'>\n        {props.activePage}\n      </h1>\n      <nav\n        role='navigation'\n        aria-label='Main navigation'\n        className='text--right'\n      >\n        <p className='neonFont'>\n          Go <span>t</span>o:\n        </p>\n        <NavLink exact to='/'>\n          Home\n        </NavLink>\n        <NavLink exact to='/contacts'>\n          Contacts\n        </NavLink>\n      </nav>\n    </>\n  );\n};\n\nexport default Navpanel;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"./styles/global.scss\";\n\nimport Home from \"./Views/Home/Home\";\nimport Contacts from \"./Views/Contacts/Contacts\";\n// import ErrorPage from \"./Views/Error/Error\";\nimport NotFound from \"./Views/NotFound/NotFound\";\n\nimport Navpanel from \"./components/Navpanel/Navpanel\";\n\nclass App extends Component {\n  state = {\n    pageName: \"\"\n  };\n\n  /* Весь этот гемморой с функцией в пропсы и хуком в функциональном компоненте\n  начался только из за того что мне захотелось сделать имя страницы \n  не в самом загружаемом компоненте страницы, а в хедере. \n  Скорее всего есть пути и легче но пока что вот как то так вот так. Я верю, что когда-нибудь ты поумнеешь, Олежа */\n  onPageSwitch = pageName => {\n    this.setState({\n      pageName: pageName\n    });\n  };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <>\n          <header className='container'>\n            <Navpanel activePage={this.state.pageName} />\n          </header>\n\n          <div className='container content of--hidden'>\n            <div className='shadow-wrapper'>\n              <Switch>\n                <Route\n                  exact\n                  path='/'\n                  render={routeProps => (\n                    <Home\n                      {...routeProps}\n                      pageSwitchHandler={this.onPageSwitch}\n                    />\n                  )}\n                />\n\n                <Route\n                  exact\n                  path='/contacts'\n                  render={routeProps => (\n                    <Contacts\n                      {...routeProps}\n                      pageSwitchHandler={this.onPageSwitch}\n                    />\n                  )}\n                />\n\n                <Route\n                  render={routeProps => (\n                    <NotFound\n                      {...routeProps}\n                      pageName={\"404\"}\n                      pageSwitchHandler={this.onPageSwitch}\n                    />\n                  )}\n                />\n              </Switch>\n            </div>\n          </div>\n\n          <footer className='footer'>\n            <div className='container'>\n              <b className='text--center'>_od {new Date().getFullYear()}</b>\n            </div>\n          </footer>\n        </>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App/styles/global.scss\";\nimport App from \"./App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}